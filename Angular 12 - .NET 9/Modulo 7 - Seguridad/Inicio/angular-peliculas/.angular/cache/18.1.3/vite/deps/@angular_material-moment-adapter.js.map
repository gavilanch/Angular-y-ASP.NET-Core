{
  "version": 3,
  "sources": ["../../../../../node_modules/@angular/material-moment-adapter/fesm2022/material-moment-adapter.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, NgModule } from '@angular/core';\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material/core';\nimport * as _rollupMoment from 'moment';\nimport _rollupMoment__default from 'moment';\nconst moment = _rollupMoment__default || _rollupMoment;\n/** InjectionToken for moment date adapter to configure options. */\nconst MAT_MOMENT_DATE_ADAPTER_OPTIONS = new InjectionToken('MAT_MOMENT_DATE_ADAPTER_OPTIONS', {\n  providedIn: 'root',\n  factory: MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY() {\n  return {\n    useUtc: false\n  };\n}\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n/** Adapts Moment.js Dates for use with Angular Material. */\nclass MomentDateAdapter extends DateAdapter {\n  constructor(dateLocale, _options) {\n    super();\n    this._options = _options;\n    this.setLocale(dateLocale || moment.locale());\n  }\n  setLocale(locale) {\n    super.setLocale(locale);\n    let momentLocaleData = moment.localeData(locale);\n    this._localeData = {\n      firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n      longMonths: momentLocaleData.months(),\n      shortMonths: momentLocaleData.monthsShort(),\n      dates: range(31, i => this.createDate(2017, 0, i + 1).format('D')),\n      longDaysOfWeek: momentLocaleData.weekdays(),\n      shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n      narrowDaysOfWeek: momentLocaleData.weekdaysMin()\n    };\n  }\n  getYear(date) {\n    return this.clone(date).year();\n  }\n  getMonth(date) {\n    return this.clone(date).month();\n  }\n  getDate(date) {\n    return this.clone(date).date();\n  }\n  getDayOfWeek(date) {\n    return this.clone(date).day();\n  }\n  getMonthNames(style) {\n    // Moment.js doesn't support narrow month names, so we just use short if narrow is requested.\n    return style == 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\n  }\n  getDateNames() {\n    return this._localeData.dates;\n  }\n  getDayOfWeekNames(style) {\n    if (style == 'long') {\n      return this._localeData.longDaysOfWeek;\n    }\n    if (style == 'short') {\n      return this._localeData.shortDaysOfWeek;\n    }\n    return this._localeData.narrowDaysOfWeek;\n  }\n  getYearName(date) {\n    return this.clone(date).format('YYYY');\n  }\n  getFirstDayOfWeek() {\n    return this._localeData.firstDayOfWeek;\n  }\n  getNumDaysInMonth(date) {\n    return this.clone(date).daysInMonth();\n  }\n  clone(date) {\n    return date.clone().locale(this.locale);\n  }\n  createDate(year, month, date) {\n    // Moment.js will create an invalid date if any of the components are out of bounds, but we\n    // explicitly check each case so we can throw more descriptive errors.\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (month < 0 || month > 11) {\n        throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n      }\n      if (date < 1) {\n        throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n      }\n    }\n    const result = this._createMoment({\n      year,\n      month,\n      date\n    }).locale(this.locale);\n    // If the result isn't valid, the date must have been out of bounds for this month.\n    if (!result.isValid() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n    return result;\n  }\n  today() {\n    return this._createMoment().locale(this.locale);\n  }\n  parse(value, parseFormat) {\n    if (value && typeof value == 'string') {\n      return this._createMoment(value, parseFormat, this.locale);\n    }\n    return value ? this._createMoment(value).locale(this.locale) : null;\n  }\n  format(date, displayFormat) {\n    date = this.clone(date);\n    if (!this.isValid(date) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('MomentDateAdapter: Cannot format invalid date.');\n    }\n    return date.format(displayFormat);\n  }\n  addCalendarYears(date, years) {\n    return this.clone(date).add({\n      years\n    });\n  }\n  addCalendarMonths(date, months) {\n    return this.clone(date).add({\n      months\n    });\n  }\n  addCalendarDays(date, days) {\n    return this.clone(date).add({\n      days\n    });\n  }\n  toIso8601(date) {\n    return this.clone(date).format();\n  }\n  /**\n   * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\n   * string into null. Returns an invalid date for all other values.\n   */\n  deserialize(value) {\n    let date;\n    if (value instanceof Date) {\n      date = this._createMoment(value).locale(this.locale);\n    } else if (this.isDateInstance(value)) {\n      // Note: assumes that cloning also sets the correct locale.\n      return this.clone(value);\n    }\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      date = this._createMoment(value, moment.ISO_8601).locale(this.locale);\n    }\n    if (date && this.isValid(date)) {\n      return this._createMoment(date).locale(this.locale);\n    }\n    return super.deserialize(value);\n  }\n  isDateInstance(obj) {\n    return moment.isMoment(obj);\n  }\n  isValid(date) {\n    return this.clone(date).isValid();\n  }\n  invalid() {\n    return moment.invalid();\n  }\n  /** Creates a Moment instance while respecting the current UTC settings. */\n  _createMoment(date, format, locale) {\n    const {\n      strict,\n      useUtc\n    } = this._options || {};\n    return useUtc ? moment.utc(date, format, locale, strict) : moment(date, format, locale, strict);\n  }\n  static {\n    this.ɵfac = function MomentDateAdapter_Factory(ɵt) {\n      return new (ɵt || MomentDateAdapter)(i0.ɵɵinject(MAT_DATE_LOCALE, 8), i0.ɵɵinject(MAT_MOMENT_DATE_ADAPTER_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: MomentDateAdapter,\n      factory: MomentDateAdapter.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MomentDateAdapter, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_LOCALE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n    }]\n  }], null);\n})();\nconst MAT_MOMENT_DATE_FORMATS = {\n  parse: {\n    dateInput: 'l'\n  },\n  display: {\n    dateInput: 'l',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY'\n  }\n};\nclass MomentDateModule {\n  static {\n    this.ɵfac = function MomentDateModule_Factory(ɵt) {\n      return new (ɵt || MomentDateModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MomentDateModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [{\n        provide: DateAdapter,\n        useClass: MomentDateAdapter,\n        deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n      }]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MomentDateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: DateAdapter,\n        useClass: MomentDateAdapter,\n        deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n      }]\n    }]\n  }], null, null);\n})();\nclass MatMomentDateModule {\n  static {\n    this.ɵfac = function MatMomentDateModule_Factory(ɵt) {\n      return new (ɵt || MatMomentDateModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatMomentDateModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [provideMomentDateAdapter()]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMomentDateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [provideMomentDateAdapter()]\n    }]\n  }], null, null);\n})();\nfunction provideMomentDateAdapter(formats = MAT_MOMENT_DATE_FORMATS, options) {\n  const providers = [{\n    provide: DateAdapter,\n    useClass: MomentDateAdapter,\n    deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n  }, {\n    provide: MAT_DATE_FORMATS,\n    useValue: formats\n  }];\n  if (options) {\n    providers.push({\n      provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS,\n      useValue: options\n    });\n  }\n  return providers;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY, MAT_MOMENT_DATE_FORMATS, MatMomentDateModule, MomentDateAdapter, MomentDateModule, provideMomentDateAdapter };\n"],
  "mappings": "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",
  "names": ["_rollupMoment__default"]
}
